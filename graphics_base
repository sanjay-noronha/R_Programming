- There are 2 phases to creating a base plot
a. Create a new  plot
b. Annotate an existing plot


- Base graphics package has many parameters that can be tweaked. To see them use ?par

- Examples
- get example datasets
  library(datasets)
  
 - Subset
 - the R command subset which, not surprisingly, returns subsets of vectors, matrices or data frames which meet conditions,
   east <- subset(pollution, region == "east")
  
- histogram
  with(airquality, hist(Ozone))
  rug(airquality) # a great function that adds a one dimension grayscale plot on the x-axis
  hist(ppm, col = "green", breaks = 100)
  
  - to get count of categorical values use 'table'
    reg <- table(pollution$region)
    
  - barplot
    We could use the above 'reg' in a barplot as follows
    barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
  
- scatterplot
  with(airquality, plot(Wind, Ozone))

- Add a label at a certain (x,y) on the scatterplot
  text(1, -2.75, "pappu")
  
  -- Add a main title
  mtext("Ozone and Weather in New York City", outer = TRUE)
  
 -- Add a legend
 legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
  
- boxplot
  quantile(x), summary(x) -- provides percentile data in text format
  airquality <- transform(airquality, Month = factor(Month)) # convert month into a factor
  boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone") # 1 box plot per group
  boxplot(pm25 ~ region, data =  pollution, col = "red") # similar to above
  boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
  
  
- base graphics parameters
  * pch, xlab, ylab Etc

-- in this case I want a subset of data to have a different look and feel
-- also adding legend
with(airquality, plot(Ozone, Wind, main = "Title goes here"))
par(new=TRUE) # do not clean the frame between plots
with(subset(airquality, Month ==5), plot(Wind, Ozone, col = "blue"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other months"))

-- plot a scatter plot of the data
-- then add a regression line

with(airquality, plot(Ozone, Wind)) # plot the scatterplot
par(new = TRUE) # hold on to the plot
model <- lm(Wind ~ Ozone, airquality) # fit a liner model
abline(model) # plot the line
abline(v= median(ppm), col = "magenta", lwd = 4) # simple vertical line at the median

-- Multi base plots
  par(mfrow = c(2,1), mar=c(4, 4, 2,1)) # setting matrix and margins
  par(mfrow = c(1, 2))
  with(airquality,{
    plot(Ozone, Wind, main = "Ozone v. Wind")
    plot(Ozone, Solar.R, main = "Ozone v. Solar R")
  })


--Another example to show the difference between plot() and points() + subsetting
-- Factors in R are stored as a vector of integer values with a corresponding set of character values to use when the factor is displayed
x <- rnorm(100)
y <- rnorm(100)
g <- gl(2, 50, labels = c("male", "female"))
plot(x, y, type = "n")
points(x[g == "male"], y[g == "male"])
points(x[g == "female"], y[g == "female"], pch = 20, col = "red")

-- Margins
-- Margins are specified as 4-long vectors of integers. Each number tells how many lines of text to leave
-- at each side. The numbers are assigned clockwise starting at the bottom. The default for the inner
-- margin is c(5.1, 4.1, 4.1, 2.1) so you can see we reduced each of these so we'll have room for some
-- outer text.


-- Writing to a graphical device
> pdf("sanjay.pdf") # open device
> plot(x,y)
> title(main = "pappu")
> dev.off() # close device

