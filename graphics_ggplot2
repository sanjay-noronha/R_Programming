
-- Implementation of grammar of graphics, a book

--  A powerful concept to organise different concepts to build a graphic

-- Input is a data frame
-- Factor variables are important e.g. gender, these are data subsets. Good labels are important.
-- A plot is made of aesthetics (color ) and geoms (line, points)


-- get sample data
    str(mpg)
    
-- The Hello world of ggplot2
   qplot(hwy, displ, data = mpg)
   
-- Introduce a another dimension via color
   qplot(hwy, displ, data = mpg, col= drv)
   
-- Geometric objects (geoms) define the basic shape of the elements on the plot. Every geom has a default statistic. Every statistic has a default geom.
   qplot(hwy, displ, data = mpg, geom = c("point", "smooth"))
   qplot(hwy, displ, data = mpg) + geom_smooth(method = "lm") #Another method
   
-- passing one measure, gives a histogram
   qplot(hwy, data = mpg, fill = drv)
   
-- FACETS
-- Now rather than having everything in 1 plot, I want multiple i.e. 1 row and multiple columns
   qplot(hwy, displ, data = mpg, facets = .~ drv)
   
   
============================================================================================================================================
   
-- if you want more control , you can use the ggplot() function
--  Components of a graphic -> data[data frame], aesthetics [color, size], geoms aka geometric objects [ points, lines, shapes] ..
--  .. facets, stats ( e.g. smooth) 
--  The artists pallette i.e. build up the solution in layers.

1. g <- ggplot(data = mpg, mapping = aes(cty, hwy))
2.  Now I can add to the above -> g + geom_point()
3. Now I can also add a smoother -> g + geom_point() + geom_smooth()

Ex: Add scatterpoint + linear model + facets
ggplot(mpg,aes(cty, hwy)) + geom_point() + geom_smooth(method = "lm") + facet_grid(~manufacturer)

Ex: One can format text e.g. subscripts
ggplot(mpg,aes(cty, hwy)) + geom_point() + geom_smooth(method = "lm") + labs(x = expression("log " * PM[2.5] )

Ex: Changing a THEME
ggplot(mpg,aes(cty, hwy)) + geom_point() + geom_smooth(method = "lm") + labs(x = expression("log " * PM[2.5] )) + theme_bw()


============================================================================================================================================

* Sometimes we need to categorize continuous data and we do this with the cut() function.

   
